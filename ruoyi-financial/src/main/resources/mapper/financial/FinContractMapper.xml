<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
		PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
		"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ruoyi.financial.mapper.FinContractMapper">

	<resultMap type="FinContract" id="FinContractResult">
		<id     property="contractId"       column="contract_id"      />
		<result property="contractName"     column="contract_name"    />
		<result property="contractNumber"     column="contract_number"    />
		<result property="contractDate"     column="contract_date"    />
		<result property="contractStart"     column="contract_start"    />
		<result property="contractEnd"     column="contract_end"    />
		<result property="contractType"     column="contract_type"    />
		<result property="debtors"     column="debtors"    />
		<result property="receivable"        column="receivable"        />
		<result property="principal"  column="principal"  />
		<result property="deptId"          column="dept_id"          />
		<result property="oppositePartyUnit"       column="opposite_party_unit"       />
		<result property="fileAddress"     column="file_address"     />
		<result property="status"       column="status"       />
		<result property="contractLocation"      column="contract_location"     />
		<result property="introduction"      column="introduction"     />
		<result property="remark"    column="remark"   />
		<result property="delFlag"     column="del_flag"    />
		<result property="createBy"   column="create_by"  />
		<result property="createTime"   column="create_time"  />
		<result property="updateBy"     column="update_by"    />
		<result property="updateTime"   column="update_time"  />
		<association property="dept"    column="dept_id" javaType="SysDept" resultMap="deptResult" />
		<association property="sysFileInfo"    column="file_id" javaType="SysFileInfo" resultMap="fileInfoResult" />
	</resultMap>

	<resultMap id="deptResult" type="SysDept">
		<id     property="deptId"   column="dept_id"     />
		<result property="parentId" column="parent_id"   />
		<result property="deptName" column="dept_name"   />
		<result property="orderNum" column="order_num"   />
		<result property="leader"   column="leader"      />
		<result property="status"   column="dept_status" />
	</resultMap>

	<resultMap id="fileInfoResult" type="SysFileInfo">
		<id     property="fileId"   column="file_id"     />
		<result property="fileName" column="file_name"   />
		<result property="filePath"   column="file_path"      />
	</resultMap>


	<sql id="selectFinContractVo">
		select c.contract_id, c.contract_name, c.contract_number, c.contract_date, c.contract_start, c.contract_end, c.contract_type, c.debtors, c.receivable, c.principal, c.dept_id, c.opposite_party_unit, c.file_address, c.status, c.contract_location, c.introduction, c.remark, c.del_flag, c.create_by, c.create_time, c.update_by, c.update_time,
			   d.dept_id, d.parent_id, d.dept_name, d.order_num, d.leader, d.status as dept_status,
			   sfi.file_name, sfi.file_path
		from fin_contract c
			left join sys_dept d on c.dept_id = d.dept_id
			left join (select a.* from sys_contract_file a where file_id = ( select MAX(file_id) from sys_contract_file where contract_id = a.contract_id)) scf on scf.contract_id = c.contract_id
			left join sys_file_info sfi on scf.file_id = sfi.file_id
	</sql>

	<select id="selectFinContractList" parameterType="FinContract" resultMap="FinContractResult">
		<include refid="selectFinContractVo"/>
		where c.del_flag = '0'
		<if test="contractId != null and contractId != 0">
			AND c.contract_id = #{contractId}
		</if>
		<if test="contractName != null and contractName != ''">
			AND c.contract_name like concat('%', #{contractName}, '%')
		</if>
		<if test="status != null and status != ''">
			AND c.status = #{status}
		</if>
		<if test="contractType != null and contractType != ''">
			AND c.contract_type = #{contractType}
		</if>
		<if test="contractNumber != null and contractNumber != ''">
			AND c.contract_number like concat('%', #{contractNumber}, '%')
		</if>
		<if test="contractDate != null and contractDate != ''">
			AND date_format(c.contract_date,'%y%m%d') >= date_format(#{params.contractDate},'%y%m%d')
			AND date_format(c.contract_date,'%y%m%d') &lt;= date_format(#{params.contractDate},'%y%m%d')
		</if>
		<if test="contractStart != null and contractStart != ''">
			AND date_format(c.contract_start,'%y%m%d') >= date_format(#{params.contractStart},'%y%m%d')
		</if>
		<if test="contractEnd != null and contractEnd != ''">
			AND date_format(c.contract_end,'%y%m%d') &lt;= date_format(#{params.contractEnd},'%y%m%d')
		</if>
		<if test="params.beginTime != null and params.beginTime != ''"><!-- 开始时间检索 -->
			AND date_format(c.create_time,'%y%m%d') >= date_format(#{params.beginTime},'%y%m%d')
		</if>
		<if test="params.endTime != null and params.endTime != ''"><!-- 结束时间检索 -->
			AND date_format(c.create_time,'%y%m%d') &lt;= date_format(#{params.endTime},'%y%m%d')
		</if>
		<if test="deptId != null and deptId != 0">
			AND (c.dept_id = #{deptId} OR c.dept_id IN ( SELECT t.dept_id FROM sys_dept t WHERE find_in_set(#{deptId}, ancestors) ))
		</if>
		<if test="principal != null and principal != ''">
			AND c.principal like concat('%', #{principal}, '%')
		</if>
		<if test="oppositePartyUnit != null and oppositePartyUnit != ''">
			AND c.opposite_party_unit like concat('%', #{oppositePartyUnit}, '%')
		</if>
		<!-- 数据范围过滤 -->
		${params.dataScope}
		order by c.contract_date desc
	</select>

	<select id="selectFinContractByContractId" parameterType="Long" resultMap="FinContractResult">
		<include refid="selectFinContractVo"/>
		where c.contract_id = #{contractId}
	</select>

	<select id="selectFinContractByContractNumber" parameterType="String" resultMap="FinContractResult">
		<include refid="selectFinContractVo"/>
		where c.contract_number = #{contractNumber}
	</select>

	<select id="checkFnContractNumberUnique" parameterType="String" resultType="int">
		select count(1) from fin_contract where contract_number = #{contractNumber} limit 1
	</select>

	<insert id="insertFinContractFile">
		insert into sys_contract_file(contract_id, file_id) values (#{contractId}, #{fileId})
	</insert>

	<insert id="insertFinContract" parameterType="FinContract">
		insert into fin_contract
		<trim prefix="(" suffix=")" suffixOverrides=",">
<!--			<if test="contractId != null and contractId !=''">contract_id,</if>-->
			<if test="contractName != null and contractName != ''">contract_name,</if>
			<if test="contractNumber != null and contractNumber != ''">contract_number,</if>
			<if test="contractDate != null">contract_date,</if>
			<if test="contractStart != null">contract_start,</if>
			<if test="contractEnd != null">contract_end,</if>
			<if test="contractType != null and contractType != ''">contract_type,</if>
			<if test="debtors != null and debtors !=''">debtors,</if>
			<if test="receivable != null and receivable !=''">receivable,</if>
			<if test="principal != null and principal !=''">principal,</if>
			<if test="deptId != null and deptId !=''">dept_id,</if>
			<if test="oppositePartyUnit != null and oppositePartyUnit !=''">opposite_party_unit,</if>
			<if test="fileAddress != null and fileAddress !=''">file_address,</if>
			<if test="status != null and status !=''">status,</if>
			<if test="contractLocation != null and contractLocation !=''">contract_location,</if>
			<if test="introduction != null and introduction !=''">introduction,</if>
			<if test="remark != null and remark !=''">remark,</if>
			<if test="createBy != null and createBy !=''">create_by,</if>
			create_time,
		</trim>
		<trim prefix="values (" suffix=")" suffixOverrides=",">
			<if test="contractId != null and contractId !=''">#{contractId},</if>
			<if test="contractName != null and contractName != ''">#{contractName},</if>
			<if test="contractNumber != null and contractNumber != ''">#{contractNumber},</if>
			<if test="contractDate != null">#{contractDate},</if>
			<if test="contractStart != null">#{contractStart},</if>
			<if test="contractEnd != null">#{contractEnd},</if>
			<if test="contractType != null and contractType != ''">#{contractType},</if>
			<if test="debtors != null and debtors !=''">#{debtors},</if>
			<if test="receivable != null and receivable !=''">#{receivable},</if>
			<if test="principal != null and principal !=''">#{principal},</if>
			<if test="deptId != null and deptId !=''">#{deptId},</if>
			<if test="oppositePartyUnit != null and oppositePartyUnit !=''">#{oppositePartyUnit},</if>
			<if test="fileAddress != null and fileAddress !=''">#{fileAddress},</if>
			<if test="status != null and status !=''">#{status},</if>
			<if test="contractLocation != null and contractLocation !=''">#{contractLocation},</if>
			<if test="introduction != null and introduction !=''">#{introduction},</if>
			<if test="remark != null and remark !=''">#{remark},</if>
			<if test="createBy != null and createBy !=''">#{createBy},</if>
			sysdate(),
		</trim>
	</insert>

	<update id="updateFinContract" parameterType="FinContract">
		update fin_contract
		<trim prefix="SET" suffixOverrides=",">
			<if test="contractName != null and contractName != ''">contract_name = #{contractName},</if>
			<if test="contractNumber != null and contractNumber != ''">contract_number = #{contractNumber},</if>
			<if test="contractDate != null">contract_date = #{contractDate},</if>
			<if test="contractStart != null">contract_start = #{contractStart},</if>
			<if test="contractEnd != null">contract_end = #{contractEnd},</if>
			<if test="contractType != null and contractType != ''">contract_type = #{contractType},</if>
			<if test="debtors != null">debtors = #{debtors},</if>
			<if test="receivable != null">receivable = #{receivable},</if>
			<if test="principal != null">principal = #{principal},</if>
			<if test="deptId != null">dept_id = #{deptId},</if>
			<if test="oppositePartyUnit != null">opposite_party_unit = #{oppositePartyUnit},</if>
			<if test="fileAddress != null">file_address = #{fileAddress},</if>
			<if test="status != null">status = #{status},</if>
			<if test="contractLocation != null">contract_location = #{contractLocation},</if>
			<if test="introduction != null">introduction = #{introduction},</if>
			<if test="remark != null">remark = #{remark},</if>
			<if test="updateBy != null">update_by = #{updateBy},</if>
			update_time = sysdate()
		</trim>
		where contract_id = #{contractId} or contract_number = #{contractNumber}
	</update>

	<update id="updateFinContractStatus" parameterType="FinContract">
		update fin_contract set status = #{status} where contract_id = #{contractId}
	</update>

	<update id="updateFinContractReceivable" >
		update fin_contract c
			left join pro_project p on p.contract_id = c.contract_id
		set c.receivable = c.receivable + #{money}
		where p.project_id = #{projectId}
	</update>


	<delete id="deleteFinContractByContractId" parameterType="Long">
		update fin_contract set del_flag = '2' where contract_id = #{contractId}
	</delete>

	<delete id="deleteFinContractByContractIds" parameterType="Long">
		update fin_contract set del_flag = '2' where contract_id in
		<foreach item="contractId" collection="array" open="(" separator="," close=")">
			#{contractId}
		</foreach>
	</delete>


</mapper> 